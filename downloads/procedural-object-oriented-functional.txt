00:10:52	User:	Это прекрасно, спасибо!!!
00:12:23	Юрий Сыровецкий:	хорошо слышно и видно
00:15:56	Андрей Янг:	Шаблоны C++ это про декларативное или императив?
00:16:18	Юрий Сыровецкий:	монады — это не императивное программирование
00:18:48	Юрий Сыровецкий:	класс не такой уж ключевой элемент ООП, в самом популярном ООП языке вообще нет классов
00:21:00	Андрей Янг:	Это в каком?
00:21:16	Mark Shevchenko:	Думаю, в JavaScript. :)
00:21:48	Юрий Сыровецкий:	да
00:21:49	Mark Shevchenko:	Но сейчас туда добавили.
00:22:14	Mark Shevchenko:	Я не помню, в какой версии, что-то в районе ES6.
00:23:04	Юрий Сыровецкий:	ок, классов не было тогда когда он стал самым популярным
00:23:15	Саша Романенко:	В ней, если совсем точно, всегда был объект. Это было особое прототипное наследие объектов (protoptype inheritance )
00:23:27	Андрей Янг:	А разве классы в JS не синтаксический сахар?
00:24:01	Саша Романенко:	и каждая функция была одновременно и классом/объектом, и функцией
00:24:16	Саша Романенко:	не, больше не сахар
00:27:19	Юрий Сыровецкий:	кстати, в 20 веке структурным программированием называлось использование не структур данных, а структур управления (ветвление, цикл)
00:32:32	Андрей Янг:	expression problem:
00:32:36	Андрей Янг:	новые сущности редко, операции часто - ФП
новые сущности часто, операции редко - ООП
00:36:02	Андрей Янг:	Расширяемость это пока новая операция не понадобится в корне иерархии наследования.
00:41:30	Юрий Сыровецкий:	идемпотентность — это другое. идемпотентная функция может быть нечистой
00:42:46	Юрий Сыровецкий:	в императивном тоже нельзя менять данные, можно менять объекты
00:43:40	Андрей Янг:	а в чем разница? в чем разница между данными и объектом?
00:45:10	Андрей Янг:	чет я не понял, говорим про ФП, а тут циклы, if
00:45:19	Юрий Сыровецкий:	ячейка памяти может сегодня хранить одно значение, завтра другое значение. а само значение не превращается в другое. 42 — всегда 42. данные могут только заменяться другими данными внутри ячейки памяти
00:46:50	Юрий Сыровецкий:	объяснять ФП через императивный цикл — сомнительная идея. не все понимают ИП. особенно начинающие программисты
00:47:51	Андрей Янг:	ИП у вас это расшифровывается как императивное программирование?
00:49:11	Юрий Сыровецкий:	да
00:49:57	Андрей Янг:	Докладчику: где отладка/тестирование сложнее?
00:50:34	Андрей Янг:	Есть примеры крупных проектов на ФП?
00:50:54	Van Der Graaf Generator:	мне кажется императивное должно противопоставляться декларативному, а не функциональному
00:51:24	Андрей Янг:	Что такое «4. Столпы»?
00:51:46	Андрей Янг:	а, понял, так и надо писать «принципы»
00:51:56	Юрий Сыровецкий:	про крупные проекты на ФП можно лучше гуглить
00:51:56	Андрей Янг:	или скрепы :)
00:52:33	Андрей Янг:	Докладчику: на будущее на слайдах ставить номер слайда
00:52:35	Юрий Сыровецкий:	про крупные проекты на ФП лучше погуглить
00:52:59	Андрей Янг:	я ddg пользую
00:53:27	Юрий Сыровецкий:	*поискать самостоятельно
00:54:31	Андрей Янг:	Verilog, VHDL это что? ФП, декларатив?
00:54:41	Юрий Сыровецкий:	процедурное ещё много где используется. в ядрах ОС, например
00:55:32	Андрей Янг:	а вот ХЗ, там везде ptr на функции в структуры прописываются, это что в таком случае?
00:55:33	Mark Shevchenko:	Насколько я знаю, сборщик мусора для .NET написан на диалекте LISP, потом транслирован на C, и уже там немного оптимизирован. Это можно считать крупным проектом?
00:56:18	Van Der Graaf Generator:	Насчет крупных проектов с ФП - в Фейсбуке оно используется для борьбы со спамом
00:56:42	Юрий Сыровецкий:	а сборщик мусора для .NET написан был на функциональном диалекте LISP?
00:57:17	Mark Shevchenko:	Я в код не смотрел. Но я подозреваю, что если бы писали императивно, смысла в LISP просто не было бы.
00:58:12	Юрий Сыровецкий:	нет, сила Лиспа в метапрограммировании, а не в ФП
01:01:20	Mark Shevchenko:	Я, на самом деле, не знаю, почему выбрали LISP. Но мне сам прецедент показался важным. 
01:02:10	Юрий Сыровецкий:	система безопасности в KasperskyOS — относительно крупный проект на Хаскеле
01:03:18	Van Der Graaf Generator:	Тема выбрана фундаментальная, да..
01:03:19	Андрей Янг:	хорошо бы про верификацию еще, в императивщине есть статические анализаторы, что есть в ФП для этого?
01:03:40	Юрий Сыровецкий:	такие же статические анализаторы
01:04:06	Андрей Янг:	я как-то с Clojure столкнулся, тяжело разбираться со скобками было
01:04:13	Андрей Янг:	прям ломало, отладка ад была для меня
01:04:17	Юрий Сыровецкий:	и многие анализаторы сами являются ФП
